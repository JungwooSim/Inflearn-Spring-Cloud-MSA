{"version":3,"file":"AdminSettings.1f65f885c5a67f13d9d6.js","mappings":"gtBAoBO,MAAMA,UAAsBC,EAAAA,cAAkC,kB,UAAA,Y,EACpD,CACbC,SAAU,GACVC,WAAW,I,EAHsD,W,EAAA,M,sFAM5C,0BACrB,MAAMD,QAA2BE,EAAAA,EAAAA,iBAAgBC,IAAI,uBACrDC,KAAKC,SAAS,CACZL,SAAAA,EACAC,WAAW,IAIfK,SACE,MAAM,SAAEN,EAAF,UAAYC,GAAcG,KAAKG,OAC/B,SAAEC,GAAaJ,KAAKK,MAE1B,OACE,SAAC,IAAD,CAAMD,SAAUA,EAAhB,UACE,UAAC,aAAD,CAAeP,UAAWA,EAA1B,WACE,gBAAKS,UAAU,yBAAyBC,MAAO,CAAEC,OAAQ,iBAAzD,sKAKA,kBAAOF,UAAU,eAAjB,UACE,2BACGG,OAAOC,QAAQd,GAAUe,KAAI,EAAEC,EAAaC,GAAkBC,KAC7D,UAAC,WAAD,YACE,2BACE,eAAIR,UAAU,yBAAd,SAAwCM,IAD1C,OAEE,sBAEDH,OAAOC,QAAQG,GAAiBF,KAAI,EAAEI,EAAaC,GAAeC,KACjE,2BACE,eAAIV,MAAO,CAAEW,YAAa,QAA1B,SAAqCH,KACrC,eAAIR,MAAO,CAAEY,WAAY,gBAAzB,SAA4CH,MAFpC,YAAWC,SANH,WAAUH,iBAqBhD,MAIA,GAAeM,EAAAA,EAAAA,UAJUjB,IAAD,CACtBC,UAAUiB,EAAAA,EAAAA,GAAYlB,EAAMmB,SAAU,sBAGxC,CAAwC5B","sources":["webpack://grafana/./public/app/features/admin/AdminSettings.tsx"],"sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { getBackendSrv } from '@grafana/runtime';\nimport { NavModel } from '@grafana/data';\n\nimport { StoreState } from 'app/types';\nimport { getNavModel } from 'app/core/selectors/navModel';\nimport Page from 'app/core/components/Page/Page';\n\ntype Settings = { [key: string]: { [key: string]: string } };\n\ninterface Props {\n  navModel: NavModel;\n}\n\ninterface State {\n  settings: Settings;\n  isLoading: boolean;\n}\n\nexport class AdminSettings extends React.PureComponent<Props, State> {\n  state: State = {\n    settings: {},\n    isLoading: true,\n  };\n\n  async componentDidMount() {\n    const settings: Settings = await getBackendSrv().get('/api/admin/settings');\n    this.setState({\n      settings,\n      isLoading: false,\n    });\n  }\n\n  render() {\n    const { settings, isLoading } = this.state;\n    const { navModel } = this.props;\n\n    return (\n      <Page navModel={navModel}>\n        <Page.Contents isLoading={isLoading}>\n          <div className=\"grafana-info-box span8\" style={{ margin: '20px 0 25px 0' }}>\n            These system settings are defined in grafana.ini or custom.ini (or overridden in ENV variables). To change\n            these you currently need to restart Grafana.\n          </div>\n\n          <table className=\"filter-table\">\n            <tbody>\n              {Object.entries(settings).map(([sectionName, sectionSettings], i) => (\n                <React.Fragment key={`section-${i}`}>\n                  <tr>\n                    <td className=\"admin-settings-section\">{sectionName}</td>\n                    <td />\n                  </tr>\n                  {Object.entries(sectionSettings).map(([settingName, settingValue], j) => (\n                    <tr key={`property-${j}`}>\n                      <td style={{ paddingLeft: '25px' }}>{settingName}</td>\n                      <td style={{ whiteSpace: 'break-spaces' }}>{settingValue}</td>\n                    </tr>\n                  ))}\n                </React.Fragment>\n              ))}\n            </tbody>\n          </table>\n        </Page.Contents>\n      </Page>\n    );\n  }\n}\n\nconst mapStateToProps = (state: StoreState) => ({\n  navModel: getNavModel(state.navIndex, 'server-settings'),\n});\n\nexport default connect(mapStateToProps)(AdminSettings);\n"],"names":["AdminSettings","React","settings","isLoading","getBackendSrv","get","this","setState","render","state","navModel","props","className","style","margin","Object","entries","map","sectionName","sectionSettings","i","settingName","settingValue","j","paddingLeft","whiteSpace","connect","getNavModel","navIndex"],"sourceRoot":""}